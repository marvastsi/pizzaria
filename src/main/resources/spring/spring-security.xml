<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- Configuração do AuthenticationProvider -->
	<sec:authentication-manager id="authenticationManager">
		<sec:authentication-provider
			user-service-ref="pizzariaUserDetailsService">
				<sec:password-encoder ref="passwordEncoder"></sec:password-encoder>
			</sec:authentication-provider>
	</sec:authentication-manager>
	
	<bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder" />
<!-- 		<constructor-arg value="x9ajDR$#Qkr91" /> -->
<!-- 	</bean> -->
	
	<!-- URLs livres do Spring Security -->
	<sec:http pattern="/" security="none" />
	<sec:http pattern="/resources/**" security="none" />
	<sec:http pattern="/xyz/authenticate" security="none" />
	
	<sec:http
			realm="Protected API"
			use-expressions="true"
			auto-config="false"
			create-session="stateless"
			entry-point-ref="unauthorizedEntryPoint"
			authentication-manager-ref="authenticationManager">
		<sec:csrf disabled="true" />
		<sec:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<sec:intercept-url pattern="/xyz/authenticate" access="permitAll" />
<!-- 		<sec:intercept-url pattern="/**" access="isAuthenticated()" /> -->
<!-- 		<sec:intercept-url method="GET" pattern="/rest/news/**" access="hasRole('user')" /> -->
<!-- 		<sec:intercept-url method="PUT" pattern="/rest/news/**" access="hasRole('admin')" /> -->
<!-- 		<sec:intercept-url method="POST" pattern="/rest/news/**" access="hasRole('admin')" /> -->
<!-- 		<sec:intercept-url method="DELETE" pattern="/rest/news/**" access="hasRole('admin')" /> -->
	</sec:http>
	
	<bean id="unauthorizedEntryPoint" class="com.matera.pizzaria.rest.UnauthorizedEntryPoint" />
	
	<bean class="com.matera.pizzaria.rest.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
		<constructor-arg ref="pizzariaUserDetailsService" />
	</bean>
	
		
<!-- 	<sec:authentication-manager id="authenticationManager"> -->
<!-- 		<sec:authentication-provider user-service-ref="userDao"> -->
<!-- 			<sec:password-encoder ref="passwordEncoder"></sec:password-encoder> -->
<!-- 		</sec:authentication-provider> -->
<!-- 	</sec:authentication-manager> -->
	

	<!-- URLs livres do Spring Security -->
<!-- 	<sec:http pattern="/" security="none" /> -->
<!-- 	<sec:http pattern="/resources/**" security="none" /> -->

	<!-- URLs com configurações do Spring Secutiry -->
<!-- 	<sec:http auto-config="true" use-expressions="true"> -->
	
<!-- 		<sec:intercept-url pattern="/**" access="isAuthenticated()" /> -->
		
<!-- 		<sec:csrf disabled="true" /> -->
		
<!-- 		<sec:form-login login-processing-url="/login" -->
<!-- 			default-target-url="/?login_success=1" /> -->
			
<!-- 		<sec:logout logout-url="/logout" logout-success-url="/?logout_success=1" -->
<!-- 			delete-cookies="JSESSIONID" /> -->
<!-- 	</sec:http> -->

	<!-- Ativa o suporte as anotações do Spring Security -->
<!-- 	<sec:global-method-security	pre-post-annotations="enabled" /> -->
	

</beans>